function _ScriptCompileEntryCamera( slot , lin )
	
	rem local variables
	local n as integer
	
	rem set camera mode
	if ConsoleCmd$(0) = "setcameramode"
		
		rem error
		if ConsoleCmd$(1) = ""
			AddTextToConsole( 3 , "SetCameraMode expects <mode>" )
			exitfunction -1
		endif
		
		rem variable support
		n = ScriptGetVariableID( slot , ConsoleCmd$(1) )
		if n > -1
			if ScriptVariableList( slot , n ).DatType <> SCRIPTDATA_INTEGER then AddTextToConsole( 3 , "Variable " + chr$(34) + ConsoleCmd$(1) + chr$(34) + " is not an integer!" ) : exitfunction -1
			n = ScriptVariableList( slot , n ).Index
		else
			n = ScriptAddDataInteger( val(ConsoleCmd$(1)) )
		endif
		
		rem create command
		Script( slot , lin ).cmd = CMD_SETCAMERAMODE
		ScriptAddDataIndexToList( slot , lin , 0 , n , SCRIPTDATA_INTEGER )
		exitfunction lin+1
		
	endif
	
	rem pan camera
	if ConsoleCmd$(0) = "pancamera"
		
		rem error
		if ConsoleCmd$(2) = ""
			AddTextToConsole( 3 , "PanCamera expects <destX#> <destZ#>" )
			exitfunction -1
		endif
		
		rem variable support
		a = ScriptGetVariableID( slot , ConsoleCmd$(1) )
		if a > -1
			if ScriptVariableList( slot , a).DatType <> SCRIPTDATA_INTEGER then AddTextToConsole( 3 , "Variable " + chr$(34) + ConsoleCmd$(1) + chr$(34) + " is not an integer!" ) : exitfunction -1
			a = ScriptVariableList( slot , a ).Index
		endif
		b = ScriptGetVariableID( slot , ConsoleCmd$(2) )
		if b > -1
			if ScriptVariableList( slot , b).DatType <> SCRIPTDATA_INTEGER then AddTextToConsole( 3 , "Variable " + chr$(34) + ConsoleCmd$(2) + chr$(34) + " is not an integer!" ) : exitfunction -1
			b = ScriptVariableList( slot , b ).Index
		endif
		if a = -1 then a = ScriptAddDataInteger( val(ConsoleCmd$(1)) )
		if b = -1 then b = ScriptAddDataInteger( val(ConsoleCmd$(2)) )
		
		rem create command
		Script( slot , lin ).cmd = CMD_PANCAMERA
		ScriptAddDataIndexToList( slot , lin , 0 , a , SCRIPTDATA_INTEGER )
		ScriptAddDataIndexToList( slot , lin , 1 , b , SCRIPTDATA_INTEGER )
		exitfunction lin+1
	endif
		
	
endfunction -3